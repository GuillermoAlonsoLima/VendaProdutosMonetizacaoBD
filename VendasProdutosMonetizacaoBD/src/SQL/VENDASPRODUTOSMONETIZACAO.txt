CREATE TABLE CLIENTE(
CPF VARCHAR(11) PRIMARY KEY UNIQUE NOT NULL,
NOME VARCHAR(50) NOT NULL,
EMAIL VARCHAR(50) NOT NULL
);

CREATE TABLE CONTA(
CODIGO SERIAL PRIMARY KEY NOT NULL,
USUARIO VARCHAR(50) UNIQUE NOT NULL,
SALDO NUMERIC(10,2) NOT NULL,
CLIENTE VARCHAR(11) REFERENCES CLIENTE NOT NULL
);

CREATE TABLE VENDA(
CODIGO SERIAL PRIMARY KEY NOT NULL,
VALOR NUMERIC(10,2) NOT NULL,
DATA_VENDA DATE NOT NULL,
COMPRADOR INTEGER REFERENCES CONTA NOT NULL
);

CREATE TABLE PRODUTO(
CODIGO SERIAL PRIMARY KEY NOT NULL,
NOME VARCHAR(50) NOT NULL,
PRECO NUMERIC(10,2) NOT NULL,
QTD INTEGER NOT NULL
);

CREATE TABLE MONETIZACAO(
CONTA INTEGER REFERENCES CONTA NOT NULL
);

CREATE TABLE VENDAS_PRODUTOS(
VENDA INTEGER REFERENCES VENDA NOT NULL,
PRODUTO INTEGER REFERENCES PRODUTO NOT NULL
);

CREATE OR REPLACE FUNCTION INSERIR_CLIENTE(VARCHAR(50),VARCHAR(50),VARCHAR(50)) RETURNS VOID AS $$
DECLARE
    CLIENTES RECORD;
BEGIN
    SELECT INTO CLIENTES CPF FROM CLIENTE WHERE CPF = $1;
    IF CLIENTES IS NULL THEN
        INSERT INTO CLIENTE VALUES($1,$2,$3); 
    ELSE
        RAISE EXCEPTION 'Cliente já existe';
    END IF;
    RETURN;
END;
$$ LANGUAGE 'plpgsql';

CREATE OR REPLACE FUNCTION INSERIR_CONTA(VARCHAR(50),NUMERIC(10,2),INTEGER) RETURNS VOID AS $$
DECLARE
    CONTAS RECORD;
BEGIN
    SELECT INTO CONTAS USUARIO FROM CONTA WHERE USUARIO = $1;
    IF CONTAS IS NULL THEN
        INSERT INTO CONTA(USUARIO,SALDO,CLIENTE) VALUES($1,$2,$3);
    ELSE
        RAISE EXCEPTION 'Conta já existe';
END;
$$ LANGUAGE 'plpgsql';

CREATE OR REPLACE FUNCTION INSERIR_PRODUTOS(VARCHAR(50),NUMERIC(10,2),INTEGER) RETURNS VOID AS $$
DECLARE
    PRODUTOS RECORD;
BEGIN
    IF $3 <> 0 THEN
        SELECT INTO PRODUTOS NOME FROM PRODUTO WHERE NOME = $1;
        IF PRODUTOS IS NULL THEN
            INSERT INTO PRODUTO(NOME,PRECO,QTD) VALUES($1,$2,$3);
        ELSE
            UPDATE PRODUTO SET QTD = QTD + $3 WHERE NOME = $1;
        END IF;
    ELSE
        RAISE EXCEPTION 'A quantidade do produto não pode ser zero';
    RETURN;
END;
$$ LANGUAGE 'plpgsql';

CREATE OR REPLACE FUNCTION DELETAR_PRODUTOS(VARCHAR(50)) RETURNS VOID AS $$
DECLARE
    PRODUTOS RECORD;
BEGIN
    UPDATE PRODUTO SET QTD = QTD - 1 WHERE NOME = $1;
    SELECT INTO PRODUTOS NOME,QTD FROM PRODUTO WHERE NOME = $1;
    IF PRODUTOS.QTD = 0 THEN
        DELETE FROM PRODUTO WHERE NOME = $1;
    END IF;
    RETURN;
END;
$$ LANGUAGE 'plpgsql';